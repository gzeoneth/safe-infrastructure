version: '3.8'

volumes:
  nginx-shared-txs:
  nginx-shared-cfg:

services:

  # Common nginx and database
  nginx:
    image: nginx:alpine
    ports:
      - "${REVERSE_PROXY_PORT}:8000"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-shared-txs:/nginx-txs
      - nginx-shared-cfg:/nginx-cfg
    depends_on:
      - txs-web
      - cfg-web
      - cgw-web

  txs-db:
    image: postgres:10-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/txs-db:/var/lib/postgresql/data

  cfg-db:
    image: postgres:10-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/cfg-db:/var/lib/postgresql/data


  # Safe Transaction Service
  txs-redis:
    image: redis:alpine

  txs-rabbitmq:
    image: rabbitmq:alpine

  txs-web:
    image: gnosispm/safe-transaction-service:${TXS_VERSION}
    env_file:
      - container_env_files/txs.env
    volumes:
      - ./txs_patchs/setup_service.py:/app/safe_transaction_service/history/management/commands/setup_service.py:ro
    environment:
      - ETHEREUM_NODE_URL=${RPC_NODE_URL}
    depends_on:
      - txs-db
      - txs-redis
    working_dir: /app
    volumes:
      - nginx-shared-txs:/nginx
    command: docker/web/run_web.sh

  txs-worker-indexer: &txs-worker
    image: gnosispm/safe-transaction-service:${TXS_VERSION}
    env_file:
      - container_env_files/txs.env
    volumes:
      - ./txs_patchs/setup_service.py:/app/safe_transaction_service/history/management/commands/setup_service.py:ro
    environment:
      - ETHEREUM_NODE_URL=${RPC_NODE_URL}
      - RUN_MIGRATIONS=1
      - WORKER_QUEUES=default,indexing
    depends_on:
      - txs-db
      - txs-redis
    command: docker/web/celery/worker/run.sh

  txs-worker-contracts-tokens:
    <<: *txs-worker
    environment:
      - WORKER_QUEUES=contracts,tokens

  txs-worker-notifications-webhooks:
    <<: *txs-worker
    environment:
      - WORKER_QUEUES=notifications,webhooks

  txs-scheduler:
    <<: *txs-worker
    command: docker/web/celery/scheduler/run.sh

  # Safe Config Service
  cfg-web:
    image: gnosispm/safe-config-service:${CFG_VERSION}
    tty: true
    volumes:
      - nginx-shared-cfg:/nginx
    env_file:
      - container_env_files/cfg.env
    depends_on:
      - cfg-db

  # Safe Client Gateway
  cgw-redis:
    image: redis:alpine

  cgw-web:
    image: gnosispm/safe-client-gateway:${CGW_VERSION}
    env_file:
      - container_env_files/cgw.env
    depends_on:
      - cgw-redis

  ui:
    image: gzeon/safe-react:v3.29.1-nova
    env_file:
      - container_env_files/ui.env
    depends_on:
      - nginx
    ports:
      - "${REVERSE_PROXY_UI_PORT}:3000"
